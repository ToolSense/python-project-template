name: Build and Publish

on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name"
        required: true
        default: "v0.0.0"

jobs:
  test_and_lint:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rye
        uses: eifinger/setup-rye@v1

      - name: Sync Rye
        run: make sync

      - name: Check formatting
        run: make check_format

      - name: Check linting
        run: make lint

      - name: Check types
        run: make check_types

  publish:
    needs: test_and_lint
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set version from tag
        run: |
          RELEASE_TAG=${{ inputs.tag_name || github.event.release.tag_name }}
          echo "$RELEASE_TAG"
          sed -i -e 's/^version = "*.*.*"/version = "'"$RELEASE_TAG"'"/g' pyproject.toml

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Install Dependencies
        run: |
          python -m pip install -U pip
          python -m pip install cibuildwheel==2.12.0 build==0.10.0
          python -m pip install wheel
          python -m pip install twine

      - name: Build wheel
        run: python -m build

      - name: Upload packages to Release
        if: github.event_name == 'release'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload "${{ github.event.release.tag_name }}" dist/*

      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_ARTIFACT_CREDENTIALS }}"

      - name: Debug
        run: |
          echo "${{ steps.auth.outputs.auth_token }}"
          echo ${{ steps.auth.outputs.auth_token }}

      - name: Upload to Artifact Registry
        env:
          TOKEN: ${{ steps.auth.outputs.auth_token }}
        run: |
          gcloud config set artifacts/repository toolsense-py-utils
          gcloud config set artifacts/location europe-west1
          gcloud auth activate-service-account --key-file=$GOOGLE_GHA_CREDS_PATH
          gcloud artifacts print-settings python > ~/.pypirc
          python -m twine upload --repository toolsense-py-utils dist/*
